<?xml version="1.0"?>
<project name="Jygments" default="build">

	<property name="root" location="${basedir}/.." />

	<property file="${root}/build/private.properties" />
	<property file="${root}/build/custom.properties" />

	<property name="component.source" location="${root}/components/${component}/source" />
	<property name="component.resources" value="${root}/components/${component}/resources" />
	<property name="component.notices" value="${root}/components/notices" />

	<property name="dependencies" location="${root}/dependencies" />
	<property name="dependencies.jars" value="${dependencies}/libraries/jars" />

	<property name="cache" location="${root}/build/cache" />
	<property name="cache.classes" location="${cache}/classes" />
	<property name="cache.maven.pom" location="${cache}/maven/pom" />
	<property name="cache.maven.build" location="${cache}/maven/build" />

	<property name="distribution" location="${root}/build/distribution" />
	<property name="distribution.content" location="${distribution}/content" />
	<property name="distribution.libraries" value="${distribution.content}/libraries" />
	<property name="distribution.jars" value="${distribution.libraries}/jars/${component.group}/${component.artifact}/${component.version}${component.version.postfix}" />
	<property name="distribution.reference" value="${distribution.content}/reference" />
	<property name="distribution.api" value="${distribution.reference}/api/${component.group}/${component.artifact}/${component.version}${component.version.postfix}" />
	<property name="distribution.source" value="${distribution.reference}/source" />

	<macrodef name="packages">
		<attribute name="suffix" />
		<sequential>
			<copy
				file="${distribution}/${component}-${component.version}${component.version.postfix}@{suffix}"
				todir="${packages.repo}/${packages.section}/${component.version}${component.version.postfix}"
				failonerror="false" />
		</sequential>
	</macrodef>

	<target name="classes" description="Compile Java code">
		<mkdir dir="${cache.classes}" />
		<javac srcdir="${component.source}" destdir="${cache.classes}" source="${compile.version}" target="${compile.version}" includeAntRuntime="no" debug="${compile.debug}" bootclasspath="${compile.boot}">
			<classpath>
				<fileset dir="${dependencies.jars}" includes="**/*.jar" />
			</classpath>
		</javac>
		<copy todir="${cache.classes}">
			<fileset dir="${component.source}" includes="**/*.json" />
		</copy>
	</target>

	<target name="javadocs" description="Create API documentation if not present">
		<available file="${distribution.api}" property="javadocs-present" />
		<antcall target="javadocs-overwrite" />
	</target>

	<target name="javadocs-overwrite" description="Create API documentation" unless="javadocs-present">
		<javadoc
			destdir="${distribution.api}" sourcepath="${component.source}" excludepackagenames="**.internal.*"
			access="protected" source="${compile.version}"
			windowtitle="${documentation.title} ${component.version}${component.version.postfix}" doctitle="${documentation.title} ${component.version}${component.version.postfix}"
			author="true" splitindex="true" use="true" version="true" nodeprecated="false" nodeprecatedlist="false" noindex="false" nonavbar="false" notree="false"
			bootclasspath="${compile.boot}">

			<link href="${documentation.jvm}" />
			<classpath>
				<fileset dir="${dependencies.jars}" includes="**/*.jar" />
			</classpath>
			<bottom>
				<![CDATA[<i>${documentation.copyright}</i>]]>
			</bottom>
		</javadoc>
	</target>

	<target name="libraries" depends="classes" description="Create Jygments jar">
		<mkdir dir="${distribution.jars}" />
		<jar destfile="${distribution.jars}/${component.artifact}.jar" basedir="${cache.classes}">
			<manifest>
				<attribute name="Main-Class" value="com.threecrickets.jygments.Jygments" />
				<attribute name="Implementation-Title" value="${component.group}:${component.artifact}" />
				<attribute name="Implementation-Version" value="${component.version}${component.version.postfix}" />
				<attribute name="Implementation-Vendor" value="Three Crickets" />
			</manifest>
		</jar>
		<copy todir="${distribution.libraries}/jars">
			<fileset dir="${dependencies.jars}" includes="**/*.jar" />
		</copy>
	</target>
	
	<target name="distribution" depends="libraries, javadocs" description="Assemble distribution">
		<copy todir="${distribution.source}/${component.group}/${component.artifact}/${component.version}${component.version.postfix}">
			<fileset dir="${component.source}" />
		</copy>
		<copy todir="${distribution.content}">
			<fileset dir="${component.notices}" />
		</copy>
	</target>

	<target name="package" depends="distribution" description="Create zip distribution package">
		<zip destfile="${distribution}/${component}-${component.version}${component.version.postfix}.zip">
			<zipfileset dir="${distribution.content}" />
		</zip>
	</target>

	<target name="deploy-maven" if="maven" depends="distribution" description="Deploy to Maven repository">
		<delete dir="${cache.maven.pom}" />
		<delete dir="${cache.maven.build}" />
		<copy todir="${cache.maven.pom}">
			<fileset dir="maven" excludes="**/*~" />
			<filterchain>
				<replacetokens>
					<token key="VERSION" value="${component.version}${component.version.postfix}" />
					<token key="DEPENDENCIES" value="${dependencies.repo}" />
					<token key="ROOT" value="${root}" />
					<token key="CACHE" value="${cache.maven.build}" />
					<token key="CONTENT" value="${distribution.content}" />
				</replacetokens>
			</filterchain>
		</copy>
		<exec executable="${maven}" dir="${cache.maven.pom}">
			<arg value="deploy" />
			<arg value="-DaltDeploymentRepository=default::default::${distribution.repo}" />
		</exec>
	</target>

	<target name="deploy-packages" if="packages.repo" description="Deploy to packages repository">
		<packages suffix=".zip" />
	</target>

	<target name="build" depends="distribution" description="Build distribution" />
	
	<target name="clean" description="Clean">
		<delete dir="${cache}" />
		<delete dir="${distribution}" />
	</target>
	
	<target name="rebuild" depends="clean, build" description="First clean and then build distribution" />

</project>
